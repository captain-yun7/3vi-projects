version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:14-alpine
    container_name: 3vi-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: secuser
      POSTGRES_PASSWORD: secpass
      POSTGRES_DB: securitydb
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - 3vi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U secuser -d securitydb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3VI 백엔드 (FastAPI)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: 3vi-backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgresql://secuser:secpass@postgres:5432/securitydb
      SECRET_KEY: your-secret-key-here-change-in-production
      OPENAI_API_KEY: dummy
      DEBUG: "True"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - 3vi-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Open WebUI 프론트엔드
  webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    restart: unless-stopped
    ports:
      - "3000:8080"
    environment:
      OPENAI_API_BASE_URL: http://backend:8000/api/v1
      OPENAI_API_KEY: sk-dummy
      ENABLE_OLLAMA_API: "false"
    volumes:
      - webui_data:/app/backend/data
    depends_on:
      - backend
    networks:
      - 3vi-network

networks:
  3vi-network:
    driver: bridge

volumes:
  postgres_data:
  webui_data:
